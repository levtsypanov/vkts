import { Scheme } from '@vkontakte/vkui';
export declare const fixTypography: (string: any, wordLength?: number) => any;
export declare function pluralize(number: number, titles: string): string;
export declare const FireEvent: (link: any) => void;
export declare const schemeChanger: ({ detail: { type, data } }: any) => Promise<{
    result: true;
}> | undefined;
export declare function disableEAndMinusOnKeyDown(e: any): void;
export declare const randInt: (from: any, to: any) => any;
export declare const rusDate: (date: any) => string;
export declare function getLangPlural(key: any, string: any, t: any): string;
export declare function getCurrencyAmount(e: any): number;
export declare function devErrorLog(e: any): void;
export declare function devLog(any: any): void;
export declare function throwDevError(error: any): void;
export declare function isRetina(): boolean;
export declare function getParams(): any;
export declare function getHash(): any;
export declare function desktopShare(url: string, image: string, title: string, comment?: any): void;
export declare function _inlineShare(popup?: any, surl?: any, params?: any, popupName?: any, popupParams?: any): void;
declare function getQueryVariable(variable: any): string | undefined;
declare function currentScheme(): "amoled" | Scheme.BRIGHT_LIGHT | Scheme.SPACE_GRAY;
declare function getPlatform(): "phone" | "computer";
declare function copy(text: string): void;
export declare function getAndroidVersion(): number | false;
export declare function getIosVersion(): number | false;
export declare function isDeviceSupported(): boolean | 0;
export declare function dynamicSort(property: any): (a: any, b: any) => number;
export declare function chunk(arr: any, chunkSize: any): any[];
export declare function unique(arr: any): string[];
export declare function declOfNum(number: any, titles: any): any;
export declare function fullScreen(): void;
export declare function isKeyInObj(obj: any, key: any): any;
export declare function setLocalStorage(key: any, val: any): void;
export declare function getLocalStorage(key: any): string | false | null;
export declare function findObjectById(arr: any, _id: any): any;
export declare function findObjectIndex(arr: any, _id: any): any;
export declare function getNewRequestId(): string;
export declare function isJsonString(str: any): boolean;
export { getQueryVariable, currentScheme, getPlatform, copy, };
